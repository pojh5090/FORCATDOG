<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">
	<select id="getBoardListCount" resultType="_int">
		SELECT COUNT(*) 
		FROM (SELECT B.*, CONNECT_BY_ISLEAF AS LEAF
		      FROM BOARD B
		      START WITH B.BOARD_LEVEL = 0
		      CONNECT BY PRIOR B.BOARD_NUM = B.PARENT_NUM)
		WHERE STATUS = 'Y' OR (STATUS = 'N' AND LEAF = 0)
	</select>
	
	<resultMap type="Board" id="boardResultSet">
		<id property="boardNum" column="BOARD_NUM"/>
		<result property="boardGroup" column="BOARD_GROUP"/>
		<result property="groupOrd" column="GROUP_ORD"/>
		<result property="boardLevel" column="BOARD_LEVEL"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="memberProfile" column="CHANGE_NAME"/>
		<result property="boardTitle" column="BOARD_TITLE"/>
		<result property="views" column="VIEWS"/>
		<result property="boardContent" column="BOARD_CONTENT"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<result property="status" column="B_STATUS"/>
	</resultMap>
	
	<select id="selectBoardList" resultMap="boardResultSet">
		SELECT BOARD_NUM, PARENT_NUM, GROUP_ORD, BOARD_LEVEL, MEMBER_ID, NICKNAME, CHANGE_NAME, CASE WHEN B_STATUS = 'N' THEN '삭제된 게시물입니다.' ELSE BOARD_TITLE END AS BOARD_TITLE, VIEWS, CREATE_DATE, MODIFY_DATE, B_STATUS
		FROM (SELECT B.BOARD_NUM, B.PARENT_NUM, B.GROUP_ORD, B.BOARD_LEVEL, B.MEMBER_ID, M.NICKNAME, MP.CHANGE_NAME, B.BOARD_TITLE, B.VIEWS, B.CREATE_DATE, B.MODIFY_DATE, B.STATUS B_STATUS, M.STATUS M_STATUS, CONNECT_BY_ISLEAF AS LEAF
      		  FROM BOARD B
          	  	   JOIN MEMBER M ON(B.MEMBER_ID = M.MEMBER_ID)
          		   LEFT JOIN MEMBER_PROFILE MP ON(B.MEMBER_ID = MP.MEMBER_ID)
		      START WITH B.BOARD_LEVEL = 0
		      CONNECT BY PRIOR B.BOARD_NUM = B.PARENT_NUM
		      ORDER SIBLINGS BY B.GROUP_ORD ASC, B.BOARD_NUM DESC)
		WHERE B_STATUS = 'Y' OR (B_STATUS = 'N' AND LEAF = 0)
	</select>
	
	<insert id="insertBoard">
		INSERT INTO BOARD VALUES(SEQ_BCOUNT.NEXTVAL,
			<choose>
				<when test="parentNum == 0">
					DEFAULT, DEFAULT, DEFAULT,
				</when>
				<otherwise>
					#{parentNum}, (SELECT NVL(MAX(GROUP_ORD), 0) + 1
								   FROM BOARD
								   WHERE PARENT_NUM = #{parentNum}), 
					#{boardLevel},
				</otherwise>
			</choose>
			#{memberId}, #{boardTitle}, DEFAULT, #{boardContent}, SYSDATE, SYSDATE, DEFAULT
		)
	</insert>
	
	<insert id="insertBoardFile">
		INSERT ALL 
		<foreach collection="fileList" item="bf" >
			INTO BOARD_FILE VALUES(BFILE_COUNT, SEQ_BCOUNT.CURRVAL,
							  #{bf.originalFileName}, #{bf.changeFileName},
							  SYSDATE, DEFAULT, DEFAULT)
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<resultMap type="BoardFile" id="boardFileResultSet">
		<id property="fileId" column="FILE_ID"/>
		<result property="boardNum" column="BOARD_NUM"/>
		<result property="originalFileName" column="ORIGIN_NAME"/>
		<result property="changeFileName" column="CHANGE_NAME"/>
		<result property="uploadDate" column="UPLOAD_DATE"/>
		<result property="downCount" column="DOWNLOAD_COUNT"/>
		<result property="status" column="STATUS"/>
	</resultMap>
	
	<resultMap type="Board" id="boardResultSet2">
		<id property="boardNum" column="BN"/>
		<result property="boardGroup" column="BOARD_GROUP"/>
		<result property="groupOrd" column="GROUP_ORD"/>
		<result property="boardLevel" column="BOARD_LEVEL"/>
		<result property="memberId" column="MEMBER_ID"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="memberProfile" column="CN"/>
		<result property="boardTitle" column="BOARD_TITLE"/>
		<result property="views" column="VIEWS"/>
		<result property="boardContent" column="BOARD_CONTENT"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<result property="status" column="BS"/>
		
		<collection property="fileList" javaType="arraylist" resultMap="boardFileResultSet" ofType="BoardFile"/>
	</resultMap>
	
	<update id="updateBoardCount">
		UPDATE BOARD SET VIEWS = VIEWS + 1
		WHERE STATUS = 'Y' AND BOARD_NUM = #{bNum}
	</update>
	
	<select id="selectBoard" resultMap="boardResultSet2">
		SELECT B.BOARD_NUM BN, B.PARENT_NUM, B.BOARD_LEVEL, M.MEMBER_ID, M.NICKNAME, MP.CHANGE_NAME CN, B.BOARD_TITLE, B.VIEWS, B.BOARD_CONTENT, B.CREATE_DATE, B.MODIFY_DATE, B.STATUS BS, BF.FILE_ID, BF.BOARD_NUM, BF.ORIGIN_NAME, BF.CHANGE_NAME, BF.UPLOAD_DATE, BF.DOWNLOAD_COUNT, BF.STATUS
		FROM BOARD B
			 JOIN MEMBER M ON(B.MEMBER_ID = M.MEMBER_ID)
			 LEFT JOIN MEMBER_PROFILE MP ON(B.MEMBER_ID = MP.MEMBER_ID)
			 LEFT JOIN BOARD_FILE BF ON(B.BOARD_NUM = BF.BOARD_NUM AND BF.STATUS = 'Y')
		WHERE B.STATUS = 'Y' AND B.BOARD_NUM = #{bNum}
	</select>
	
	<update id="updateFileCount">
		UPDATE BOARD_FILE SET DOWNLOAD_COUNT = DOWNLOAD_COUNT + 1
		WHERE STATUS = 'Y' AND FILE_ID = #{fileId}
	</update>
	
	<update id="deleteExFile">
		UPDATE BOARD_FILE SET STATUS = 'N'
		WHERE BOARD_NUM = #{bNum} 
			<if test="exFile != null">
			  AND FILE_ID NOT IN
			  <foreach collection="exFile" item="fileId" open="(" separator=", " close=")">
			  		#{fileId}
			  </foreach>
			</if>
	</update>
	
	<update id="updateBoard">
		UPDATE BOARD SET BOARD_TITLE = #{boardTitle}, BOARD_CONTENT = #{boardContent}, MODIFY_DATE = SYSDATE
		WHERE STATUS = 'Y' AND BOARD_NUM = #{boardNum} AND MEMBER_ID = #{memberId}
	</update>
	
	<update id="updateBoardFile">
		INSERT ALL 
		<foreach collection="fileList" item="bf" >
			INTO BOARD_FILE VALUES(BFILE_COUNT, #{boardNum},
							  #{bf.originalFileName}, #{bf.changeFileName},
							  SYSDATE, DEFAULT, DEFAULT)
		</foreach>
		SELECT * FROM DUAL
	</update>
	
	<resultMap type="Comment" id="CommentResultSet">
		<id property="c_num" column="COMMENT_NUM"/>
		<result property="c_Gnum" column="COMMENT_GROUP"/>
		<result property="g_order" column="GROUP_ORD"/>
		<result property="c_level" column="COMMENT_LEVEL"/>
		<result property="b_num" column="BOARD_NUM"/>
		<result property="member_id" column="MEMBER_ID"/>
		<result property="c_content" column="COMMENT_CONTENT"/>
		<result property="memberProfile" column="CHANGE_NAME"/>
		<result property="createDate" column="CREATE_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
		<result property="status" column="STATUS"/>
	</resultMap>
	
	<insert id="insertComment">
		INSERT INTO BOARD_COMMENT VALUES(SEQ_BCCOUNT.NEXTVAL,
			<choose>
				<when test="c_Gnum == 0">
					DEFAULT, DEFAULT, DEFAULT,
				</when>
				<otherwise>
					#{c_Gnum}, (SELECT NVL(MAX(GROUP_ORD), 0) + 1
								   FROM BOARD_COMMENT
								   WHERE COMMENT_GROUP = #{c_Gnum}), 
					#{c_level},
				</otherwise>
			</choose>
			#{b_num}, #{member_id}, #{c_content}, SYSDATE, SYSDATE, DEFAULT
		)
	</insert>
	
	<select id="selectComment" resultMap="CommentResultSet">
		SELECT COMMENT_NUM, COMMENT_GROUP, GROUP_ORD, COMMENT_LEVEL, BOARD_NUM, MEMBER_ID, NICKNAME, CHANGE_NAME, 
      CASE WHEN BC_STATUS = 'N' THEN '삭제된 댓글' ELSE COMMENT_CONTENT END 
      AS COMMENT_CONTENT, NICKNAME, CREATE_DATE, MODIFY_DATE, BC_STATUS, M_STATUS
      FROM (SELECT BC.COMMENT_NUM, BC.COMMENT_GROUP, BC.GROUP_ORD, BC.COMMENT_LEVEL, 
            BC.BOARD_NUM, BC.MEMBER_ID, BC.COMMENT_CONTENT, M.NICKNAME, MP.CHANGE_NAME, BC.CREATE_DATE, 
            BC.MODIFY_DATE, BC.STATUS BC_STATUS, M.STATUS M_STATUS, CONNECT_BY_ISLEAF AS LEAF
                  FROM BOARD_COMMENT BC
             JOIN MEMBER M ON(BC.MEMBER_ID = M.MEMBER_ID)
             LEFT JOIN MEMBER_PROFILE MP ON(BC.MEMBER_ID = MP.MEMBER_ID)
             WHERE BC.BOARD_NUM = #{b_num}
         START WITH BC.COMMENT_LEVEL = 0
         CONNECT BY PRIOR BC.COMMENT_NUM = BC.COMMENT_GROUP
         ORDER SIBLINGS BY BC.GROUP_ORD ASC, BC.COMMENT_NUM ASC)
      WHERE BC_STATUS = 'Y' OR (BC_STATUS = 'N' AND LEAF = 0)
	</select>
	
	<update id="deleteComment">
		UPDATE BOARD_COMMENT 
		SET STATUS = 'N'
		WHERE COMMENT_NUM = #{cNum}
	</update>
	
	<update id="deleteBoard">
		UPDATE BOARD
		SET STATUS = 'N'
		WHERE BOARD_NUM = #{bnum}
	</update>
	
	<update id="updateComment">
		UPDATE BOARD_COMMENT
		SET COMMENT_CONTENT = #{c_content}, MODIFY_DATE = SYSDATE
		WHERE COMMENT_NUM = #{c_num}
	</update>
	
	<select id="getSearchCount" resultType="_int">
		SELECT COUNT(*) 
		FROM BOARD B
		JOIN MEMBER M ON(B.MEMBER_ID = M.MEMBER_ID) 
		WHERE ${option} LIKE '%' || #{word} || '%' AND B.STATUS = 'Y'
	</select>
	
	<select id="searchBoardList" resultMap="boardResultSet">
		SELECT BOARD_NUM, PARENT_NUM, GROUP_ORD, BOARD_LEVEL, B.MEMBER_ID, NICKNAME, CHANGE_NAME, BOARD_TITLE, BOARD_CONTENT, VIEWS, CREATE_DATE, MODIFY_DATE
	    FROM BOARD B
	    JOIN MEMBER M ON(B.MEMBER_ID = M.MEMBER_ID)
	    LEFT JOIN MEMBER_PROFILE MP ON(B.MEMBER_ID = MP.MEMBER_ID)
	    <if test="#{word} != ''">
	    WHERE ${option} LIKE '%' || #{word} || '%' AND B.STATUS = 'Y'
	    </if>
	    ORDER BY B.GROUP_ORD ASC, B.BOARD_NUM DESC
	</select>
	
	<select id="allSearchBoard" resultMap="boardResultSet">
		SELECT BOARD_NUM, PARENT_NUM, GROUP_ORD, BOARD_LEVEL, B.MEMBER_ID, NICKNAME, CHANGE_NAME, BOARD_TITLE, BOARD_CONTENT, VIEWS, CREATE_DATE, MODIFY_DATE
	    FROM BOARD B
	    JOIN MEMBER M ON(B.MEMBER_ID = M.MEMBER_ID)
	    LEFT JOIN MEMBER_PROFILE MP ON(B.MEMBER_ID = MP.MEMBER_ID)
	    WHERE B.STATUS = 'Y'
	    <if test="#{word} != ''">
	   	AND (BOARD_TITLE LIKE '%' || #{word} || '%' OR BOARD_CONTENT LIKE '%' || #{word} || '%')
	    </if>
	    ORDER BY B.GROUP_ORD ASC, B.BOARD_NUM DESC
	</select>
	
	<select id="selectMBoardList" resultMap="boardResultSet">
		SELECT *
		FROM BOARD
		WHERE STATUS='Y'
		ORDER BY BOARD_NUM DESC
	</select>
	
	<select id="selectManagerBoardList" resultMap="boardResultSet">
		SELECT *
		FROM BOARD
		WHERE STATUS = 'Y'
		ORDER BY BOARD_NUM DESC
	</select>
	
	<select id="getManagerBoardListCount" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD
		WHERE STATUS = 'Y'
	</select>
</mapper>
